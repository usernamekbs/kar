package com.kick;

import java.awt.AlphaComposite;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLDecoder;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

import javax.imageio.ImageIO;

import org.apache.poi.util.SystemOutLogger;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.junit.jupiter.api.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.edge.EdgeOptions;
import org.openqa.selenium.support.ui.Select;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;

import com.kick.entity.Product11;
import com.kick.entity.Product11Repository;

@SpringBootTest
class Market11JandCompany {
    
	@Autowired Product11Repository repository;
	
	public static final String filePath= "C:\\Users\\15kso\\OneDrive\\바탕 화면\\새 폴더\\옵션.xlsx";
	List<String> selectCountOption = new ArrayList<>();
	/////////////////////////////////////////11번가///////////////////////////////////////
	@Test
	//test 코드에서 transactional 사용 하지 마라
	void asd() throws InterruptedException, IOException {
		EdgeDriver driver;
	 	EdgeOptions options = new EdgeOptions();
        driver = new EdgeDriver(options);
        
	    driver.get("https://jncompany.shop/member/login.html");
	    WebElement member_id=driver.findElement(By.id("member_id"));
        WebElement member_passwd=driver.findElement(By.id("member_passwd"));
        WebElement login=driver.findElement(By.cssSelector("form > div > fieldset > a.btnSubmit.sizeL.df-lang-button-login"));
        member_id.sendKeys("qudtn6085");
        member_passwd.sendKeys("qudtn!4589");
        login.click();
        Thread.sleep(5000);
        
        repository.deleteAll();
        //19까지 함 APPLE
        driver.navigate().to("https://jncompany.shop/product/list.html?cate_no=209");
        
        //변수
        List<String> urls = new ArrayList<>();
        //tcnt
        for(int i=1; i<=2;i++) {
    		List<WebElement> elements = driver.findElements(By.cssSelector("#contents > div.xans-element-.xans-product.xans-product-normalpackage > div.xans-element-.xans-product.xans-product-listnormal.df-prl-wrap.df-prl-setup > ul > li > div.df-prl-box > div.df-prl-thumb > a"));
        	
        	for(WebElement ele : elements) {
        		urls.add(ele.getAttribute("href"));
        	}
        	driver.findElement(By.cssSelector("#contents > div.xans-element-.xans-product.xans-product-normalpaging.ec-base-paginate > a:nth-child(4)")).click();
        }
        
        for(String url : urls) {
        	driver.navigate().to(url);
        	//상세페이지에있는 제목 가격 온라인판매가 제조사
        	WebElement title=driver.findElement(By.cssSelector("#df-product-detail > div > div.infoArea-wrap > div > div > div.scroll-wrapper.df-detail-fixed-scroll.scrollbar-macosx > div.df-detail-fixed-scroll.scrollbar-macosx.scroll-content > div.headingArea > h2"));
        	WebElement price=driver.findElement(By.cssSelector("#df-product-detail > div > div.infoArea-wrap > div > div > div.scroll-wrapper.df-detail-fixed-scroll.scrollbar-macosx > div.df-detail-fixed-scroll.scrollbar-macosx.scroll-content > div.xans-element-.xans-product.xans-product-detaildesign > table > tbody > tr.product_price_css.xans-record- > td > span:nth-child(1) > strong"));
        	//셀렉트박스는 두개값 만 가져옴
        	List<WebElement> selectLists = driver.findElements(By.cssSelector("#df-product-detail > div > div.infoArea-wrap > div > div > div.scroll-wrapper.df-detail-fixed-scroll.scrollbar-macosx > div.df-detail-fixed-scroll.scrollbar-macosx.scroll-content > ul > li > ul > li.content > select"));
        	StringBuilder selectOption = new StringBuilder();
        	StringBuilder optionQty =new StringBuilder();
        	
        	String uuid = UUID.randomUUID().toString();
        	String uuid2 = UUID.randomUUID().toString();
        	
        	List<String> imgs = new ArrayList<>();
        	List<WebElement> thumbLists = driver.findElements(By.cssSelector("#df-product-detail > div > div.imgArea-wrap > div > div > div.thumbnail > span > img"));
        	//
        	List<WebElement> detailImageLists = driver.findElements(By.cssSelector("#prdDetail > div.cont > div > div > div > p> img"));
        	List<WebElement> detailImageLists2 = driver.findElements(By.cssSelector("#prdDetail > div.cont > div:nth-child(2) > div:nth-child(3) > div:nth-child(3) > p:nth-child(4) > img"));
        	List<WebElement> detailImageLists3 = driver.findElements(By.cssSelector("#prdDetail > div.cont > div:nth-child(2) > div:nth-child(3) > div:nth-child(1) > p:nth-child(2) > img"));
        	List<WebElement> detailImageLists4 = driver.findElements(By.cssSelector("#prdDetail > div.cont > div:nth-child(2) > div:nth-child(3) > div:nth-child(3) > div > p:nth-child(2) > img"));
        	List<WebElement> detailImageLists5 = driver.findElements(By.cssSelector("#prdDetail > div.cont > div:nth-child(2) > div:nth-child(4) > div:nth-child(3) > p:nth-child(6) > img"));
        	List<WebElement> detailImageLists6 = driver.findElements(By.cssSelector("#prdDetail > div.cont > div:nth-child(2) > div:nth-child(3) > div:nth-child(3) > p:nth-child(2) > img"));
        	
        	List<WebElement> detailImageLists7 = driver.findElements(By.cssSelector("#prdDetail > div.cont > div:nth-child(2) > p:nth-child(2) > img"));
        	List<WebElement> detailImageLists8 = driver.findElements(By.cssSelector("#prdDetail > div.cont > div:nth-child(2) > p:nth-child(3) > img"));
        	List<WebElement> detailImageLists9 = driver.findElements(By.cssSelector("#prdDetail > div.cont > div:nth-child(2) > img"));
        	List<WebElement> detailImageLists10 = driver.findElements(By.cssSelector("#prdDetail > div.cont > div:nth-child(2) > p:nth-child(4) > img"));
        	List<WebElement> detailImageLists11 = driver.findElements(By.cssSelector("#prdDetail > div.cont > div:nth-child(2) > p:nth-child(5) > img"));
        	List<WebElement> detailImageLists12 = driver.findElements(By.cssSelector("#prdDetail > div.cont > div:nth-child(2) > p:nth-child(6) > img"));
        	List<WebElement> detailImageLists13 = driver.findElements(By.cssSelector("#prdDetail > div.cont > div:nth-child(2) > p:nth-child(1) > img"));
        	List<WebElement> detailImageLists14 = driver.findElements(By.cssSelector("#prdDetail > div.cont > div:nth-child(2) > div > img"));
        	List<WebElement> detailImageLists15 = driver.findElements(By.cssSelector("#prdDetail > div.cont > div:nth-child(2) > div:nth-child(4) > img"));
        	List<WebElement> detailImageLists16 = driver.findElements(By.cssSelector("#prdDetail > div.cont > div:nth-child(2) > div:nth-child(5) > img"));
        	List<WebElement> detailImageLists17 = driver.findElements(By.cssSelector("#prdDetail > div.cont > div:nth-child(2) > div:nth-child(6) > img"));
        	
        	List<WebElement> detailImageLists18 = driver.findElements(By.cssSelector("#prdDetail > div.cont > div:nth-child(2) > div:nth-child(7) > img"));
        	List<WebElement> detailImageLists19 = driver.findElements(By.cssSelector("#prdDetail > div.cont > div:nth-child(2) > div:nth-child(8) > img"));
        	
            String fileName = null;
            String thbFormat = null;
            for(WebElement thmb : thumbLists) {
        		thbFormat = thmb.getAttribute("src").substring(thmb.getAttribute("src").length()-4,thmb.getAttribute("src").length());
        		if(thbFormat.equals(".jpg")||thbFormat.equals(".gif")||thbFormat.equals(".png")||thbFormat.equals(".jpeg")) {
        			String imgUrl = thmb.getAttribute("src");
        			fileName = thmb.getAttribute("src").substring(thmb.getAttribute("src").lastIndexOf("/") + 1);
        			fileName = URLDecoder.decode(fileName,"UTF-8").toString().substring(0, URLDecoder.decode(fileName,"UTF-8").length()-4);
        			String savePath ="C:\\Users\\15kso\\OneDrive\\바탕 화면\\새 폴더\\";
              		File afterFile = new File(savePath + uuid.toString()+".png");
              		saveThumbImage(imgUrl,savePath,afterFile);	
        		}
            }

            String detailName = null;
            StringBuilder sb =new StringBuilder();
            if(detailImageLists.size()!=0) {
	            for(WebElement detailImage : detailImageLists) {
	            	String imgUrl = detailImage.getAttribute("src");
	       		    detailName = detailImage.getAttribute("src").substring(detailImage.getAttribute("src").lastIndexOf("/") + 1);
	       			if(URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4).length()<50) {
	       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4)+".jpeg"+"'/>"+"</p>";
	           			sb.append(detailImg);
	            		imgs.add(imgUrl);
	       			}else {
	       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+uuid2.toString()+".jpeg"+"'/>"+"</p>";
	           			sb.append(detailImg);
	            		imgs.add(imgUrl);
	       			}
	            }
            }
            if(detailImageLists2.size()!=0) {
	            for(WebElement detailImage : detailImageLists2) {
	            	String imgUrl = detailImage.getAttribute("src");
	            	detailName = detailImage.getAttribute("src").substring(detailImage.getAttribute("src").lastIndexOf("/") + 1);
	       			if(URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4).length()<50) {
	       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4)+".jpeg"+"'/>"+"</p>";
	           			sb.append(detailImg);
	            		imgs.add(imgUrl);
	       			}else {
	       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+uuid2.toString()+".jpeg"+"'/>"+"</p>";
	           			sb.append(detailImg);
	            		imgs.add(imgUrl);
	       			}
	            }
            }
            if(detailImageLists3.size()!=0) {
    	        
	            for(WebElement detailImage : detailImageLists3) {
	            	String imgUrl = detailImage.getAttribute("src");
	       		    detailName = detailImage.getAttribute("src").substring(detailImage.getAttribute("src").lastIndexOf("/") + 1);
	       			if(URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4).length()<50) {
	       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4)+".jpeg"+"'/>"+"</p>";
	           			sb.append(detailImg);
	            		imgs.add(imgUrl);
	       			}else {
	       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+uuid2.toString()+".jpeg"+"'/>"+"</p>";
	           			sb.append(detailImg);
	            		imgs.add(imgUrl);
	       			}
	            }
            }
            if(detailImageLists4.size()!=0) {
    	        
	            for(WebElement detailImage : detailImageLists4) {
	            	String imgUrl = detailImage.getAttribute("src");
	            	detailName = detailImage.getAttribute("src").substring(detailImage.getAttribute("src").lastIndexOf("/") + 1);
	       			if(URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4).length()<50) {
	       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4)+".jpeg"+"'/>"+"</p>";
	           			sb.append(detailImg);
	            		imgs.add(imgUrl);
	       			}else {
	       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+uuid2.toString()+".jpeg"+"'/>"+"</p>";
	           			sb.append(detailImg);
	            		imgs.add(imgUrl);
	       			}
	            }
            }
            for(WebElement detailImage : detailImageLists5) {
            	String imgUrl = detailImage.getAttribute("src");
       		    detailName = detailImage.getAttribute("src").substring(detailImage.getAttribute("src").lastIndexOf("/") + 1);
       			if(URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4).length()<50) {
       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4)+".jpeg"+"'/>"+"</p>";
           			sb.append(detailImg);
            		imgs.add(imgUrl);
       			}else {
       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+uuid2.toString()+".jpeg"+"'/>"+"</p>";
           			sb.append(detailImg);
            		imgs.add(imgUrl);
       			}
            }
            
            for(WebElement detailImage : detailImageLists6) {
            	String imgUrl = detailImage.getAttribute("src");
       		    detailName = detailImage.getAttribute("src").substring(detailImage.getAttribute("src").lastIndexOf("/") + 1);
       			if(URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4).length()<50) {
       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4)+".jpeg"+"'/>"+"</p>";
           			sb.append(detailImg);
            		imgs.add(imgUrl);
       			}else {
       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+uuid2.toString()+".jpeg"+"'/>"+"</p>";
           			sb.append(detailImg);
            		imgs.add(imgUrl);
       			}
            }
            
            for(WebElement detailImage : detailImageLists7) {
            	String imgUrl = detailImage.getAttribute("src");
       		    detailName = detailImage.getAttribute("src").substring(detailImage.getAttribute("src").lastIndexOf("/") + 1);
       			if(URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4).length()<50) {
       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4)+".jpeg"+"'/>"+"</p>";
           			sb.append(detailImg);
            		imgs.add(imgUrl);
       			}else {
       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+uuid2.toString()+".jpeg"+"'/>"+"</p>";
           			sb.append(detailImg);
            		imgs.add(imgUrl);
       			}
            }
            
            for(WebElement detailImage : detailImageLists8) {
            	String imgUrl = detailImage.getAttribute("src");
       		    detailName = detailImage.getAttribute("src").substring(detailImage.getAttribute("src").lastIndexOf("/") + 1);
       			if(URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4).length()<50) {
       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4)+".jpeg"+"'/>"+"</p>";
           			sb.append(detailImg);
            		imgs.add(imgUrl);
       			}else {
       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+uuid2.toString()+".jpeg"+"'/>"+"</p>";
           			sb.append(detailImg);
            		imgs.add(imgUrl);
       			}
            }
            
            for(WebElement detailImage : detailImageLists9) {
            	String imgUrl = detailImage.getAttribute("src");
       		    detailName = detailImage.getAttribute("src").substring(detailImage.getAttribute("src").lastIndexOf("/") + 1);
       			if(URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4).length()<50) {
       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4)+".jpeg"+"'/>"+"</p>";
           			sb.append(detailImg);
            		imgs.add(imgUrl);
       			}else {
       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+uuid2.toString()+".jpeg"+"'/>"+"</p>";
           			sb.append(detailImg);
            		imgs.add(imgUrl);
       			}
            }
            for(WebElement detailImage : detailImageLists10) {
            	String imgUrl = detailImage.getAttribute("src");
       		    detailName = detailImage.getAttribute("src").substring(detailImage.getAttribute("src").lastIndexOf("/") + 1);
       			if(URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4).length()<50) {
       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4)+".jpeg"+"'/>"+"</p>";
           			sb.append(detailImg);
            		imgs.add(imgUrl);
       			}else {
       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+uuid2.toString()+".jpeg"+"'/>"+"</p>";
           			sb.append(detailImg);
            		imgs.add(imgUrl);
       			}
            }
            for(WebElement detailImage : detailImageLists11) {
            	String imgUrl = detailImage.getAttribute("src");
       		    detailName = detailImage.getAttribute("src").substring(detailImage.getAttribute("src").lastIndexOf("/") + 1);
       			if(URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4).length()<50) {
       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4)+".jpeg"+"'/>"+"</p>";
           			sb.append(detailImg);
            		imgs.add(imgUrl);
       			}else {
       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+uuid2.toString()+".jpeg"+"'/>"+"</p>";
           			sb.append(detailImg);
            		imgs.add(imgUrl);
       			}
            }
            for(WebElement detailImage : detailImageLists12) {
            	String imgUrl = detailImage.getAttribute("src");
       		    detailName = detailImage.getAttribute("src").substring(detailImage.getAttribute("src").lastIndexOf("/") + 1);
       			if(URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4).length()<50) {
       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4)+".jpeg"+"'/>"+"</p>";
           			sb.append(detailImg);
            		imgs.add(imgUrl);
       			}else {
       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+uuid2.toString()+".jpeg"+"'/>"+"</p>";
           			sb.append(detailImg);
            		imgs.add(imgUrl);
       			}
            }
            for(WebElement detailImage : detailImageLists13) {
            	String imgUrl = detailImage.getAttribute("src");
       		    detailName = detailImage.getAttribute("src").substring(detailImage.getAttribute("src").lastIndexOf("/") + 1);
       			if(URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4).length()<50) {
       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4)+".jpeg"+"'/>"+"</p>";
           			sb.append(detailImg);
            		imgs.add(imgUrl);
       			}else {
       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+uuid2.toString()+".jpeg"+"'/>"+"</p>";
           			sb.append(detailImg);
            		imgs.add(imgUrl);
       			}
            }
            for(WebElement detailImage : detailImageLists14) {
            	String imgUrl = detailImage.getAttribute("src");
       		    detailName = detailImage.getAttribute("src").substring(detailImage.getAttribute("src").lastIndexOf("/") + 1);
       			if(URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4).length()<50) {
       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4)+".jpeg"+"'/>"+"</p>";
           			sb.append(detailImg);
            		imgs.add(imgUrl);
       			}else {
       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+uuid2.toString()+".jpeg"+"'/>"+"</p>";
           			sb.append(detailImg);
            		imgs.add(imgUrl);
       			}
            }
            for(WebElement detailImage : detailImageLists15) {
            	String imgUrl = detailImage.getAttribute("src");
       		    detailName = detailImage.getAttribute("src").substring(detailImage.getAttribute("src").lastIndexOf("/") + 1);
       			if(URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4).length()<50) {
       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4)+".jpeg"+"'/>"+"</p>";
           			sb.append(detailImg);
            		imgs.add(imgUrl);
       			}else {
       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+uuid2.toString()+".jpeg"+"'/>"+"</p>";
           			sb.append(detailImg);
            		imgs.add(imgUrl);
       			}
            }
            for(WebElement detailImage : detailImageLists16) {
            	String imgUrl = detailImage.getAttribute("src");
       		    detailName = detailImage.getAttribute("src").substring(detailImage.getAttribute("src").lastIndexOf("/") + 1);
       			if(URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4).length()<50) {
       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4)+".jpeg"+"'/>"+"</p>";
           			sb.append(detailImg);
            		imgs.add(imgUrl);
       			}else {
       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+uuid2.toString()+".jpeg"+"'/>"+"</p>";
           			sb.append(detailImg);
            		imgs.add(imgUrl);
       			}
            }
            for(WebElement detailImage : detailImageLists17) {
            	String imgUrl = detailImage.getAttribute("src");
       		    detailName = detailImage.getAttribute("src").substring(detailImage.getAttribute("src").lastIndexOf("/") + 1);
       			if(URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4).length()<50) {
       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4)+".jpeg"+"'/>"+"</p>";
           			sb.append(detailImg);
            		imgs.add(imgUrl);
       			}else {
       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+uuid2.toString()+".jpeg"+"'/>"+"</p>";
           			sb.append(detailImg);
            		imgs.add(imgUrl);
       			}
            }
            for(WebElement detailImage : detailImageLists18) {
            	String imgUrl = detailImage.getAttribute("src");
       		    detailName = detailImage.getAttribute("src").substring(detailImage.getAttribute("src").lastIndexOf("/") + 1);
       			if(URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4).length()<50) {
       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4)+".jpeg"+"'/>"+"</p>";
           			sb.append(detailImg);
            		imgs.add(imgUrl);
       			}else {
       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+uuid2.toString()+".jpeg"+"'/>"+"</p>";
           			sb.append(detailImg);
            		imgs.add(imgUrl);
       			}
            }
            
            for(WebElement detailImage : detailImageLists19) {
            	String imgUrl = detailImage.getAttribute("src");
       		    detailName = detailImage.getAttribute("src").substring(detailImage.getAttribute("src").lastIndexOf("/") + 1);
       			if(URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4).length()<50) {
       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+URLDecoder.decode(detailName,"UTF-8").toString().substring(0, URLDecoder.decode(detailName,"UTF-8").length()-4)+".jpeg"+"'/>"+"</p>";
           			sb.append(detailImg);
            		imgs.add(imgUrl);
       			}else {
       				String detailImg = "<p align='center'>"+"<img src='https://gi.esmplus.com/qudtn0295/11detail2/"+uuid2.toString()+".jpeg"+"'/>"+"</p>";
           			sb.append(detailImg);
            		imgs.add(imgUrl);
       			}
            }
            
		   	String detailImgs = null;
		   	for(String img : imgs) {
				 String imageUrl  = img;
				 String savePath ="C:\\Users\\15kso\\OneDrive\\바탕 화면\\detailimage\\";
				 detailImgs = img.substring(img.lastIndexOf("/") + 1);
				 
				 if(URLDecoder.decode(detailImgs,"UTF-8").toString().substring(0, URLDecoder.decode(detailImgs,"UTF-8").length()-4).length() <= 50) {
					 File afterFile = new File(savePath +URLDecoder.decode(detailImgs,"UTF-8").toString().substring(0, URLDecoder.decode(detailImgs,"UTF-8").length()-4)+".jpeg");
					 saveDetailImage(imageUrl,savePath,afterFile);
				 }else {
					 
					 File afterFile = new File(savePath + uuid2.toString()+".jpeg");
					 saveDetailImage(imageUrl,savePath,afterFile);
				 }
				 
			}
		   	
        	int size=0;
        	
        	//셀렉트
        	for(WebElement sel : selectLists) {
        		
        		Select selectOptions = new Select(sel);
        		selectOptions.selectByIndex(2);
	        	List<WebElement> optionList = selectOptions.getOptions();
	        	optionList.remove(0);
				
	        	for(WebElement option : optionList) {
	        		if(sel.getAttribute("id").equals("product_option_id2")) {
	        			//optionList에서 개수를 제한하는것도 방법일듯함..
	        			if(option.isEnabled()) {
	        					System.out.println(option.getText());
			        			selectOption.append(option.getText()+"|");
			        			optionQty.append("999|");
			        			size++;
	        			}
	        		}
	        	}
        	}
        	String rePrice = price.getText();
        	rePrice = rePrice.replace(",","");
        	rePrice = rePrice.replace("원","");
        	int reInPrice= Integer.parseInt(rePrice);
        	if(reInPrice<10000) {
        		reInPrice = reInPrice+8000;
        	}else {
        		reInPrice = reInPrice+9000;
        	}
        	String reRealPrice = price.getText();
        	reRealPrice = reRealPrice.replace(",", "");
        	reRealPrice = reRealPrice.replace("원 이상", "");
        	reRealPrice = reRealPrice.replace("㈜트라이코지", rePrice);
        	reRealPrice = Integer.toString(reInPrice); 
        	System.out.println(reRealPrice);
        	String reTitle = title.getText();
        	reTitle = reTitle.replace("[TryCozy]","");
        	reTitle = reTitle.replace("[[ZANMANG LOOPY]","");
        	reTitle = reTitle.replace("트라이코지","[커버핏]");
        	
        	String reOption = selectOption.toString();
        	//플립
        	reOption = reOption.replace("(F731)","");
        	reOption = reOption.replace("(F721)","");
        	reOption = reOption.replace("(F711)","");
        	reOption = reOption.replace("(F711/F721)","");
        	//폴드
        	reOption = reOption.replace("(F916)","");
        	reOption = reOption.replace("(F926)","");
        	reOption = reOption.replace("(F936)","");
        	reOption = reOption.replace("(F946)","");
        	//아이폰
        	reOption = reOption.replace("(6.5)","");
        	reOption = reOption.replace("(5.8)","");
        	reOption = reOption.replace("(6.1)","");
        	reOption = reOption.replace("(5.4)","");
        	reOption = reOption.replace("(6.7)","");
        	reOption = reOption.replace("아이폰 12/아이폰 12프로","아이폰 12/12Pro");
        	reOption = reOption.replace("프로맥스","Promax");
        	reOption = reOption.replace("미니","Mini");
        	reOption = reOption.replace("프로","Pro");
        	reOption = reOption.replace("플러스","Plus");
        	reOption = reOption.replace("울트라","Ultra");
        	reOption = reOption.replace(" ","");
        	reOption = reOption.replace("갤럭시S20(SM-G981N)노트시리즈아님_기종선택유의해주세요","");
        	reOption = reOption.replace("갤럭시S20Plus(SM-G986N)노트시리즈아님_기종선택유의해주세요","");
        	reOption = reOption.replace("갤럭시S20Ultra(SM-G988N)노트시리즈아님_기종선택유의해주세요","");
        	reOption = reOption.replace("노트20(SM-N981N)S시리즈아님_기종선택유의해주세요","");
        	reOption = reOption.replace("노트20Ultra(SM-N986N)S시리즈아님_기종선택유의해주세요","");
        	//노트
//        	reOption = reOption.replace(" (SM-G981N) 노트시리즈아님_기종선택 유의해주세요","");
//        	reOption = reOption.replace(" (SM-G986N) 노트시리즈아님_기종선택 유의해주세요","");
//        	reOption = reOption.replace(" (SM-G988N) 노트시리즈아님_기종선택 유의해주세요","");
//        	reOption = reOption.replace(" (SM-N981N) S시리즈아님_기종선택 유의해주세요","");
//        	reOption = reOption.replace(" (SM-N986N) S시리즈아님_기종선택 유의해주세요","");
        	
        	//s시리즈
        	reOption = reOption.replace("(N981)","");
        	reOption = reOption.replace("(N986)","");
        	reOption = reOption.replace("(N971)","");
        	reOption = reOption.replace("(N976)","");
        	reOption = reOption.replace("(N960)","");
        	reOption = reOption.replace("(N950)","");
        	reOption = reOption.replace("(N930)","");
        	reOption = reOption.replace("(N920)","");
        	reOption = reOption.replace("(S911)","");
        	reOption = reOption.replace("(S916)","");
        	reOption = reOption.replace("(S918)","");
        	reOption = reOption.replace("(S901)","");
        	reOption = reOption.replace("(S906)","");
        	reOption = reOption.replace("(S908)","");
        	reOption = reOption.replace("(G990)","");
        	reOption = reOption.replace("(G991)","");
        	reOption = reOption.replace("(G996)","");
        	reOption = reOption.replace("(G998)","");
        	reOption = reOption.replace("(G781)","");
        	reOption = reOption.replace("(G981)","");
        	reOption = reOption.replace("(G986)","");
        	reOption = reOption.replace("(G988)","");
        	reOption = reOption.replace("(G970)","");
        	reOption = reOption.replace("(G973)","");
        	reOption = reOption.replace("(G975)","");
        	reOption = reOption.replace("(G977)","");
        	reOption = reOption.replace("(G960)","");
        	reOption = reOption.replace("(G965)","");
			
        	if(!thbFormat.equals("webp")) {
	        	Product11 products = new Product11();
	        	products.setTitle(reTitle);
	        	if(reOption.length()!=0) {
	        		products.setOption(reOption.substring(0, reOption.length()-1));
	        	}
	        	products.setPrice(reRealPrice);
	        	products.setCompany("트라이코지");
	        	products.setDetailImg(sb.toString());
	        	products.setThmb("https://gi.esmplus.com/qudtn0295/11thumb6/"+uuid.toString()+".png");
	        	products.setStockQty(999*size);
	        	if(optionQty.length()!=0) {
	        		products.setOptionQty(optionQty.toString().substring(0, optionQty.toString().length()-1));
	        	}
	        	repository.save(products);
        	}
        	
        }
        
	}
	//이미지 읽을대 뒤에 확장자명 곡 붙여줘야함..
	@Test
	public void excel() throws InterruptedException, IOException {
		int i=0;
		 //워크북 생성
	    XSSFWorkbook workbook = new XSSFWorkbook();
	    //워크시트 생성
	    XSSFSheet sheet = workbook.createSheet();
	    //행 생성
	    XSSFRow row = sheet.createRow(0);
	    //셀 생성
	    XSSFCell cell;
	    cell = row.createCell(0);
	    cell.setCellValue("제목");
	    cell = row.createCell(1);
	    cell.setCellValue("제조사");
	    cell = row.createCell(2);
	    cell.setCellValue("도매가");
	    cell = row.createCell(3);
	    cell.setCellValue("온라인 판매가");
	    cell = row.createCell(4);
	    cell.setCellValue("옵션");
	    cell = row.createCell(5);
	    cell.setCellValue("재고 수량");
	    cell = row.createCell(6);
	    cell.setCellValue("재고 값");
	    cell = row.createCell(7);
	    cell.setCellValue("상세페이지 이미지");
	    cell = row.createCell(8);
	    cell.setCellValue("THMB");
	    List<Product11> products = repository.findAll();
	    
//	    long count = repository.count();
	    for(Product11 p : products) {
	    	row = sheet.createRow(i+1);
	    	cell = row.createCell(0);
	    	cell.setCellValue(p.getTitle());
	    	cell = row.createCell(1);
	    	cell.setCellValue("커버핏");
	    	cell = row.createCell(2);
	    	cell.setCellValue(p.getPrice());
	    	cell = row.createCell(3);
	    	cell.setCellValue(p.getRealPrice());
	    	cell = row.createCell(4);
	    	cell.setCellValue(p.getOption());
	    	cell = row.createCell(5);
	    	cell.setCellValue(p.getStockQty());
	    	cell = row.createCell(6);
	    	cell.setCellValue(p.getOptionQty());
	    	cell = row.createCell(7);
	    	cell.setCellValue(p.getDetailImg());
	    	cell = row.createCell(8);
	    	cell.setCellValue(p.getThmb());
	    	i++;
	    }
	   
		File file = new File("C:\\Users\\15kso\\OneDrive\\바탕 화면\\새 폴더\\옵션.xls");
        FileOutputStream fos = null; 
        fos = new FileOutputStream(file);
        workbook.write(fos);
	}
	
	public static void saveDetailImage(String imageUrl, String savePath, File afterFile) throws MalformedURLException {
		URL url;
		//jpeg,png,bmp,wbmp,gif 만 지원을함. webp 지원안함 ㅡㅡ 다른 라이브러리 찾아라  개같음
		BufferedImage bi = null;
		try {
			url = new URL(imageUrl); // 다운로드 할 이미지 URL
			bi = ImageIO.read(url);
			
			Image resizeImage = bi.getScaledInstance(bi.getWidth(), bi.getHeight(), Image.SCALE_SMOOTH);
			BufferedImage newImage = new BufferedImage(bi.getWidth(), bi.getHeight(), BufferedImage.TYPE_INT_RGB);
            Graphics g = newImage.getGraphics();
        	g.drawImage(resizeImage, 0, 0, null);
            g.dispose();
			ImageIO.write(newImage, "jpeg", afterFile);
		} catch (MalformedURLException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	}

	public static void saveThumbImage(String imageUrl, String savePath, File afterFile) throws MalformedURLException {
		//jpeg,png,bmp,wbmp,gif 만 지원을함. webp 지원안함 ㅡㅡ 다른 라이브러리 찾아라  개같음
		try {
			URL url = new URL(imageUrl); // 다운로드 할 이미지 URL
			BufferedImage bi = ImageIO.read(url);
			Image resizeImage = bi.getScaledInstance( 600, 600, Image.SCALE_SMOOTH);
			BufferedImage newImage = new BufferedImage( 600, 600, BufferedImage.TYPE_INT_RGB );
			Graphics g = newImage.getGraphics();
			g.drawImage(resizeImage, 0, 0, null);
			g.dispose();
			
			ImageIO.write(newImage, "png", afterFile);
		} catch (MalformedURLException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	}
	
}
